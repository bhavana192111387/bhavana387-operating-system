#include<stdio.h>
struct process
{
 int size;
 int flag; 
 int holeid;
} p[10];

struct hole
{
int hid; 
int size; 
int actual;
} h[10];
 

main()
{
int i, np, nh, j;
void bsort(struct hole[], int);
printf("Enter the number of Holes : ");
scanf("%d", &nh);
for(i=0; i<nh; i++)
{
printf("Enter size for hole H%d : ",i);
scanf("%d", &h[i].size);
h[i].actual =h[i].size;
h[i].hid = i;
}
printf("\nEnter number of process : " );
scanf("%d",&np);
for(i=0;i<np;i++)
{
printf("enter the size of process P%d : ",i); 
scanf("%d", &p[i].size);
p[i].flag = 0;
}
for(i=0; i<np; i++)
{
bsort(h, nh);
for(j=0; j<nh; j++)
{
if(p[i].flag != 1)
{
if(p[i].size <= h[j].size)
{
p[i].flag = 1; p[i].holeid = h[j].hid;
h[j].size -= p[i].size;
}
}
}
}
printf("\n\tBest fit\n");
printf("\nProcess\tPSize\tHole"); 
for(i=0; i<np; i++)
{
if(p[i].flag != 1)
printf("\nP%d\t%d\tNot allocated", i, p[i].size);
 else
printf("\nP%d\t%d\tH%d", i, p[i].size, p[i].holeid);
}
printf("\n\nHole\tActual\tAvailable"); 
for(i=0; i<nh ;i++)
printf("\nH%d\t%d\t%d", h[i].hid, h[i].actual, h[i].size);
 
printf("\n");
}

void bsort(struct hole bh[], int n)
{
struct hole temp; int i,j;
for(i=0; i<n-1; i++)
{
for(j=i+1; j<n; j++)
{
if(bh[i].size > bh[j].size)
{
temp = bh[i]; bh[i] = bh[j]; bh[j] = temp;
}
}
}
}

output:

Enter the number of Holes : 5
Enter size for hole H0 : 100
Enter size for hole H1 : 200
Enter size for hole H2 : 300
Enter size for hole H3 : 400
Enter size for hole H4 : 500

Enter number of process : 4
enter the size of process P0 : 212
enter the size of process P1 : 143
enter the size of process P2 : 413
enter the size of process P3 : 314

        Best fit

Process PSize   Hole
P0      212     H2
P1      143     H1
P2      413     H4
P3      314     H3

Hole    Actual  Available
H1      200     57
H4      500     87
H2      300     88
H0      100     100
H3      400     86

--------------------------------

